#+title: Cpp Benchmarks

#+begin_src cpp
#include <iostream>
#include <stack>
#include <vector>
#include <chrono>

using namespace std;
using namespace std::chrono;

const int NUM_ELEMENTS = 100000000;

int main() {
    // Benchmark for stack<int>
    auto start_default = high_resolution_clock::now();
    stack<int> default_stack;
    for (int i = 0; i < NUM_ELEMENTS; ++i) {
        default_stack.push(i);
    }
    while (!default_stack.empty()) {
        default_stack.pop();
    }
    auto stop_default = high_resolution_clock::now();
    auto duration_default = duration_cast<milliseconds>(stop_default - start_default);

    // Benchmark for stack<int, vector<int>>
    auto start_vector = high_resolution_clock::now();
    stack<int, vector<int>> vector_stack;
    for (int i = 0; i < NUM_ELEMENTS; ++i) {
        vector_stack.push(i);
    }
    while (!vector_stack.empty()) {
        vector_stack.pop();
    }
    auto stop_vector = high_resolution_clock::now();
    auto duration_vector = duration_cast<milliseconds>(stop_vector - start_vector);

    cout << "Time taken by stack<int>: " << duration_default.count() << " milliseconds" << endl;
    cout << "Time taken by stack<int,vector<int>>: " << duration_vector.count() << " milliseconds" << endl;

    return 0;
}

#+end_src

#+RESULTS:
| Time | taken | by | stack<int>:             |  940 | milliseconds |
| Time | taken | by | stack<int,vector<int>>: | 1290 | milliseconds |
