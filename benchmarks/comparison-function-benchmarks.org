#+title: Comparison Function Benchmarks

* Setup
:PROPERTIES:
:CREATED_TIME: [2022-09-02 Fri 15:10]
:END:

#+name: benchmark-setup
#+begin_src elisp
;;; experiments/seq-cl-dash-benchmarks.el -*- lexical-binding: t; -*-
(defmacro k/benchmark-run (n &rest forms)
  "Benchmark each of FORMS with `benchmark-run' with N repetitions."
  (declare (indent 1))
  `(list
    '(form\# total gc-count gc-time)
    'hline
    ,@(cl-loop with index = 1
               for form in forms
               collect
               (prog2
                   (garbage-collect)
                   `(cons ,index (benchmark-run ,n
                                   ,form))
                 (cl-incf index)))))

(defmacro k/benchmark-run-compiled (n &rest forms)
  "Benchmark each of FORMS, byte-compiled, with N repetitions."
  (declare (indent 1))
  `(list
    '(form\# total gc-count gc-time)
    'hline
    ,@(cl-loop with index = 1
               for form in forms
               collect
               (prog2
                   (garbage-collect)
                   `(cons ,index
                          ;; Because `benchmark-run-compiled'
                          ;; quotes the lambda, it is not able to
                          ;; see any let form around it.
                          (benchmark-call (native-compile (lambda () ,form))
                                          ,n))
                 (cl-incf index)))))
#+end_src

#+RESULTS: benchmark-setup
: k/benchmark-run-compiled


* Benchmarks
:PROPERTIES:
:CREATED_TIME: [2022-09-02 Fri 15:18]
:END:

** =cl-remove-duplicates= but with different =:test= functions
:PROPERTIES:
:CREATED_TIME: [2023-05-12 Fri 19:39]
:END:

#+begin_src emacs-lisp :tangle :noweb yes
<<benchmark-setup>>
(let ((lst (make-list 5000 8)))
  (k/benchmark-run-compiled
   10000
   (cl-remove-duplicates lst :test #'=)
   (cl-remove-duplicates lst :test #'eq)
   (cl-remove-duplicates lst :test #'equal)))
#+end_src

#+RESULTS:
| form# |              total | gc-count | gc-time |
|-------+--------------------+----------+---------|
|     1 |        2.384952694 |        0 |     0.0 |
|     2 |         2.34236763 |        0 |     0.0 |
|     3 | 2.4323005479999997 |        0 |     0.0 |

Old results:
#+RESULTS:
| form# |              total | gc-count | gc-time |
|-------+--------------------+----------+---------|
|     1 |        2.400467216 |        0 |     0.0 |
|     2 |        2.339334813 |        0 |     0.0 |
|     3 | 2.5311752629999997 |        0 |     0.0 |

#+begin_src emacs-lisp :tangle :noweb yes
<<benchmark-setup>>
(let ((lst (make-list 5000 'hello-how-are-you)))
  (k/benchmark-run-compiled
   10000
   (cl-remove-duplicates lst :test #'eq)
   (cl-remove-duplicates lst :test #'equal)))
#+end_src

#+RESULTS:
| form# |       total | gc-count | gc-time |
|-------+-------------+----------+---------|
|     1 | 2.328537198 |        0 |     0.0 |
|     2 | 2.472841711 |        0 |     0.0 |

#+begin_src emacs-lisp :tangle :noweb yes
<<benchmark-setup>>
(let ((lst (make-list 5000 "hello how are you")))
  (k/benchmark-run-compiled
   10000
   (cl-remove-duplicates lst :test #'eq)
   (cl-remove-duplicates lst :test #'equal)
   (cl-remove-duplicates lst :test #'string=)))
#+end_src

#+RESULTS:
| form# |       total | gc-count | gc-time |
|-------+-------------+----------+---------|
|     1 | 2.299111045 |        0 |     0.0 |
|     2 |  2.44475258 |        0 |     0.0 |
|     3 | 2.524530791 |        0 |     0.0 |
