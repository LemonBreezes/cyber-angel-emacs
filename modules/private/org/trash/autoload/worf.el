;;; private/org/autoload/worf.el -*- lexical-binding: t; -*-

;;;###autoload (autoload 'cae-worf-cheat-sheet/body "private/org/autoload/worf" nil t)
(let ((bindings
       `(("j" wspecial-worf-down "")
         ("k" wspecial-worf-up "")
         ("h" wspecial-worf-left "")
         ("l" wspecial-worf-right "")
         ("f" wspecial-hydra-worf-f/body "Move")
         ("J" wspecial-outline-next-visible-heading "")
         ("K" wspecial-outline-previous-visible-heading "")
         ("g" wspecial-worf-goto "Move")
         ("o" wspecial-worf-ace-link "Move") ;Visit Link
         ("O" wspecial-worf-ace-link-eww "Move") ;Visit in EWW
         ("b" wspecial-worf-back-link "Move")
         ("i" wspecial-worf-tab "Hide/Show")
         ("/" wspecial-worf-tab-contents "Hide/Show")
         ("I" wspecial-worf-shifttab "Hide/Show")
         ("v" wspecial-worf-view "Hide/Show")
         ("F" wspecial-worf-attach-visit "Files")
         ("A" wspecial-worf-attach "Files")
         ("V" wspecial-worf-visit "Files")
         ("r" wspecial-worf-hydra-refile/body "Files")
         ("x" wspecial-hydra-worf-promote/body "Misc")
         ("L" wspecial-worf-copy-heading-id "Misc")
         ("a" wspecial-worf-add "Misc")
         ("e" wspecial-worf-eval "Misc")
         ("E" wspecial-org-priority "Misc")
         ("s" wspecial-worf-save "Misc")
         ("N" wspecial-org-narrow-to-subtree "Narrow/Widen")
         ("W" wspecial-widen "Narrow/Widen")
         ("c" wspecial-hydra-worf-change/body "Verbs")
         ("d" wspecial-worf-delete-mode "Verbs")
         ("y" wspecial-worf-occur "Verbs")
         ("C" wspecial-worf-clock-mode "Verbs")

         ("w" wspecial-worf-keyword-mode "Verbs")
         ("m" worf-mark "Verbs")
         ("q" wspecial-worf-quit "Verbs")
         ("n" wspecial-worf-new-copy "Verbs")
         ("p" wspecial-worf-property "Nouns")
         ("P" wspecial-worf-paste "Nouns")
         ;;("P" wspecial-org-priority "Misc")
         ("t" wspecial-worf-todo "Misc")
         ("u" wspecial-undo "Misc")
         ("R" wspecial-worf-recenter-mode))))
  (eval
   (append '(defhydra cae-worf-cheat-sheet (:hint nil :foreign-keys run)
              ("<f6>" nil "Exit" :exit t))
           (cl-loop for binding in bindings
                    unless (string= (caddr binding) "")
                    collect
                    `(,(car binding)
                      ,(cadr binding)
                      ,(thread-last (symbol-name (cadr binding))
                                    (string-remove-prefix "wspecial-")
                                    (string-remove-prefix "worf-")
                                    (string-remove-prefix "org-")
                                    (string-remove-prefix "outline-"))
                      :column ,(caddr binding))))
   t))
