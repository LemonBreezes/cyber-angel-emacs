;;; private/org/autoload/org-jira.el -*- lexical-binding: t; -*-


;;;###autoload (autoload 'cae-org-jira-hydra/body "private/org/autoload/org-jira" nil t)
(defhydra cae-org-jira-hydra (:color pink :foreign-keys run)
  ("<f6>" nil "Exit" :exit t)
  ("bg" 'org-jira-get-boards :column "boards")
  ("iv" 'org-jira-get-issues-by-board :column "issues")
  ("ib" 'org-jira-browse-issue :column "issues")
  ("ig" 'org-jira-get-issues :column "issues")
  ("ij" 'org-jira-get-issues-from-custom-jql :column "issues")
  ("ih" 'org-jira-get-issues-headonly :column "issues")
  ;;(define-key org-jira-map (kbd "C-c if") 'org-jira-get-issues-from-filter-headonly)
  ;;(define-key org-jira-map (kbd "C-c iF") 'org-jira-get-issues-from-filter)
  ("iu" 'org-jira-update-issue :column "issues")
  ("iw" 'org-jira-progress-issue :column "issues")
  ("in" 'org-jira-progress-issue-next :column "issues")
  ("ia" 'org-jira-assign-issue :column "issues")
  ;;(define-key org-jira-map (kbd "C-c isr") 'org-jira-set-issue-reporter)
  ("ir" 'org-jira-refresh-issue :column "issues")
  ("iR" 'org-jira-refresh-issues-in-buffer :column "issues")
  ("ic" 'org-jira-create-issue :column "issues")
  ("ik" 'org-jira-copy-current-issue-key :column "issues")
  ("sc" 'org-jira-create-subtask :column "subtasks")
  ("sg" 'org-jira-get-subtasks :column "subtasks")
  ("cc" 'org-jira-add-comment :column "comments")
  ("cu" 'org-jira-update-comment :column "comments")
  ("wu" 'org-jira-update-worklogs-from-org-clocks :column "worklogs")
  ("tj" 'org-jira-todo-to-jira :column "todo")
  ("if" 'org-jira-get-issues-by-fixversion :column "issues"))
