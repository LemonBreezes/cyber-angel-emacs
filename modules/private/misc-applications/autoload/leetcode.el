;;; private/misc-applications/autoload/leetcode.el -*- lexical-binding: t; -*-

;;;###autoload
(defun +leetcode ()
  (interactive)
  (when (modulep! :ui workspaces)
    (+workspace-switch +leetcode-workspace-name t))
  (leetcode))

;;;###autoload
(defun +leetcode-quit ()
  (interactive)
  (leetcode-quit)
  (when (and (modulep! :ui workspaces)
             (+workspace-exists-p +leetcode-workspace-name))
    (+workspace-delete +leetcode-workspace-name)
    (+workspace/other)))

;;;###autoload
(defun +leetcode-soft-quit ()
  (interactive)
  (if (modulep! :ui workspaces)
      (+workspace/other)
    (quit-window)))

;;;###autoload (autoload '+leetcode-problems-hydra/body "private/misc-applications/autoload/leetcode" nil t)
(defhydra +leetcode-problems-hydra (:color pink :hint nil)
  ("<f6>" nil "Exit" :exit t)
  ("q" +leetcode-soft-quit nil :exit t)
  ("Q" +leetcode-quit nil :exit t)
  ("TAB" leetcode-view-current-problem "View problem" :column "Current problem")
  ("RET" leetcode-show-current-problem "Show problem" :column "Current problem")
  ("B" leetcode-show-problem-in-browser "Browse problem URL" :column "Act on ID")
  ("C" leetcode-solve-problem "Solve problem" :column "Act on ID")
  ("G" leetcode-refresh-fetch "Soft refresh" :column "Misc")
  ("L" leetcode-set-prefer-language "Set preferred language" :column "Misc")
  ("O" leetcode-show-problem :column "Act on ID")
  ("P" leetcode-toggle-paid-display "Toggle paid problems" :column "Filter")
  ("S" tabulated-list-sort "Sort" :column "Misc")
  ("T" leetcode-toggle-tag-display "Toggle tag display" :column "Display")
  ("V" leetcode-view-problem "View problem" :column "Act on ID")
  ("b" leetcode-show-current-problem-in-browser "Browse problem URL" :column "Current problem")
  ("c" leetcode-solve-current-problem "Solve problem" :column "Current problem")
  ("d" leetcode-set-filter-difficulty "Filter difficulty" :column "Filter")
  ("g" leetcode-refresh "Soft refresh" :column "Misc")
  ;;("o" leetcode-show-current-problem "Show problem" :column "Current Problem")
  ("r" leetcode-reset-filter "Reset filter" :column "Filter")
  ("s" leetcode-set-filter-regex "Narrow to regex" :column "Filter")
  ("t" leetcode-set-filter-tag "Narrow to tag" :column "Filter")
  ;;("v" leetcode-view-current-problem "View problem" :column "Current Problem")
  )
