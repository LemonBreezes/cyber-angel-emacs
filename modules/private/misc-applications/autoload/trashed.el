;;; private/misc-applications/autoload/trashed.el -*- lexical-binding: t; -*-

;;;###autoload
(defun +trashed-revert-buffer-a (oldfun)
  (when (prog1 (buffer-live-p trashed-buffer)
          (funcall oldfun))
    (revert-buffer)))

;;;###autoload (autoload '+trashed-hydra/body "private/misc-applications/autoload/trashed" nil t)
(eval
 `(defhydra +trashed-hydra (:color pink)
    ("<f6>" nil "Exit" :exit t)
    ("S" tabulated-list-sort "Sort" :column "Misc")
    ("m" trashed-mark "Mark" :column "Mark")
    ("M" trashed-mark-all "Mark all" :column "Mark")
    ("u" trashed-unmark "Unmark" :column "Mark")
    ("U" trashed-unmark-all "Unmark all" :column "Mark")
    ("$ m" trashed-mark-files-by-date "Mark by date" :column "Mark")
    ("$ u" trashed-unmark-files-by-date "Unmark by date" :column "Mark")
    ("$ d" trashed-flag-delete-files-by-date "Flag delete by date" :column "Flag")
    ("$ r" trashed-flag-restore-files-by-date "Flag restore by date" :column "Flag")
    ("% m" trashed-mark-files-regexp "Mark by regexp" :column "Mark")
    ("% u" trashed-unmark-files-regexp "Unmark by regexp" :column "Mark")
    ("% d" trashed-flag-delete-files-regexp "Flag delete by regexp" :column "Flag")
    ("% r" trashed-flag-restore-files-regexp "Flag restore by regexp" :column "Flag")
    ("d" trashed-flag-delete "Flag delete" :column "Flag")
    ("r" trashed-do-restore-and-exit "Flag restore" :column "Flag")
    ("x" trashed-do-execute "Execute" :column "Do")
    ("D" trashed-do-delete "Delete" :column "Do")
    ("R" trashed-do-restore "Restore" :column "Do")
    ("v" trashed-view-file "View file" :column "View")
    ,@(if (modulep! :editor evil)
          '(("~" trashed-toggle-marks "Toggle marks" :column "Mark")
            ("zb" trashed-flag-backup-files "Flag backup files for deletion" :column "Flag")
            ("za" trashed-flag-auto-save-files "Flag auto save files" :column "Mark")
            ("gr" revert-buffer "Refresh" :column "Misc")
            ("gw" trashed-browse-url-of-file "Browse URL of file" :column "View")
            ;;("gO" trashed-display-file "Display file" :column "View")
            ("RET" trashed-find-file "Find file" :column "View")
            ("S-RET" trashed-find-file-other-window "Find file other window" :column "View")
            ("M-RET" trashed-display-file "Display file" :column "View"))
        '(("t" trashed-toggle-marks "Toggle marks" :column "Mark")
          ("~" trashed-flag-backup-files "Flag backup files for deletion" :column "Flag")
          ("#" trashed-flag-auto-save-files "Flag auto save files" :column "Mark")
          ("g" revert-buffer "Refresh" :column "Misc")
          ("C-o" trashed-display-file "Display file" :column "View")
          ("e" trashed-browse-url-of-file "Browse URL of file" :column "View")
          ("f" trashed-find-file "Find file" :column "View")
          ("o" trashed-display-file "Find file other window" :column "View"))))
 t)
