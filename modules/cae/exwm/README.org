#+TITLE:   os/exwm
#+DATE:    January 5, 2022
#+SINCE:   v1.0.0
#+STARTUP: inlineimages nofold

* Table of Contents :TOC_3:noexport:

- [[#description][Description]]
  - [[#maintainers][Maintainers]]
  - [[#module-flags][Module Flags]]
  - [[#plugins][Plugins]]
  - [[#hacks][Hacks]]
- [[#prerequisites][Prerequisites]]
- [[#features][Features]]
- [[#configuration][Configuration]]
  - [[#setting-up-your-xinitrc-file][Setting up your ~xinitrc~ file.]]
  - [[#setting-the-default-major-mode-for-exwm-edit][Setting the default major mode for EXWM Edit.]]
  - [[#setting-up-link-hints-for-chrome-based-and-firefox-based-web-browsers][Setting up link hints for Chrome-based and Firefox-based web browsers]]
  - [[#bookmarks-in-web-browsers][Bookmarks in web browsers]]
  - [[#setting-up-multiple-monitors][Setting up multiple monitors]]
  - [[#using-i3-style-keybindings][Using i3-style keybindings]]
- [[#troubleshooting][Troubleshooting]]
  - [[#how-do-i-send-escape-or-c-c-to-applications][How do I send ~escape~ or ~C-c~ to applications?]]
  - [[#when-i-mouse-click-while-in-evils-normal-state-i-get-an-error][When I mouse-click while in Evil's normal state I get an error.]]
  - [[#the-commands-for-opening-nested-emacs-sessions-do-not-work][The commands for opening nested Emacs sessions do not work.]]
  - [[#my-application-does-not-display-any-gui][My application does not display any GUI.]]
- [[#future-directions][Future directions]]

* Description

_Warning: This README is out of date._

This module enables and provides sane defaults for the Emacs X Window Manager
[[https://github.com/ch11ng/exwm][(EXWM)]].

+ Control applications as Emacs buffers.
+ Edit any application's input field with Emacs.
+ Use Emacs input methods in other applications.
+ Use VIM keys in major web browsers like Firefox and Chrome.
+ Launch and control nested Emacs sessions within Emacs.

WARNING: The Evil keybindings have just become out of date as of 06/26/2022.
I'll have the documentation fixed this week.

** Maintainers

+ @[[https://github.com/LemonBreezes][LemonBreezes]] (Author)

** Module Flags

This module provides no flags.

** Plugins

+ [[https://github.com/ch11ng/exwm][exwm]]
+ [[https://github.com/LemonBreezes/exwm-evil][exwm-evil]]
+ [[https://github.com/walseb/exwm-firefox-evil][exwm-firefox-evil]]
+ [[https://github.com/agzam/exwm-edit][exwm-edit]]
+ [[https://github.com/andreasjansson/language-detection.el][language-detection]]
+ [[https://github.com/ieure/exwm-mff][exwm-mff]]
+ [[https://github.com/SebastienWae/app-launcher][app-launcher]]

** Hacks

When switching to a workspace where an EXWM buffer is focused, inputs do not get
passed to the application. To work around this, I wrote a hook which briefly activates
the minibuffer for input and then quits the minibuffer.

* Prerequisites

This module has no prerequisites.

* Features

+ Edit any application's input field with =C-c '=.
+ Use Emacs input methods in other applications. Simply set the input method as
  usual with =C-x RET C-\=.
+ Open nested sessions of Emacs with alternate configurations.
+ Use Evil in any application! Specific browsers such as Google Chrome and
  Firefox have extended support for Evil keybindings. Simply install the
  ~link-hints~ extension/add-on and start VIM-ing!
+ Create bookmarks in Chromium buffers as ordinary Emacs bookmarks. Install the
  [[https://chrome.google.com/webstore/detail/add-url-to-page-title/ghpeimfjbonkimelnkbgekmcboomkgmi/related?hl=en-GB][Add Page URL to Title]] Chrome extension and it just works.

Moreover, when this module is loaded, the following global keybindings are made:

| Keybinding | Description                         |
|------------+-------------------------------------|
| =SPC $=      | Open a GNU/Linux application        |
| =SPC o n=    | Open a nested Emacs session         |
| =SPC o N=    | Open a nested vanilla Emacs session |
| =SPC f v=    | Find file in vanilla Emacs          |
| =SPC f V=    | Find this file in vanilla Emacs     |
| =SPC m '=    | Edit input field in Emacs           |

* Configuration

** Setting up your ~xinitrc~ file.

In order to enable EXWM, Emacs needs to be running within X.Org without any
window manager present. The recommended way to go about this is with the
~startx~ script. The [[https://github.com/ch11ng/exwm/wiki/Configuration-Example][EXWM wiki]] contains an example ~xinitrc~ file for use by
~startx~.

** Setting the default major mode for EXWM Edit.

By default, when you edit an application's input field and no programming
language can be detected in the text, ~org-mode~ will your major mode. If you
would like to change this, set the ~+exwm-edit-default-major-mode~ variable:

#+begin_src elisp
(setq +exwm-edit-default-major-mode 'markdown-mode)
#+end_src

** Setting up link hints for Chrome-based and Firefox-based web browsers

For users of Evil, the ~f~ and ~F~ keys are bound to special Link Hint commands
within Chrome-based and Firefox-based web browsers. For these commands to work,
you must have the Link Hint add-on/extension installed. For Chrome-based web
browsers, install Link Hint through [[https://chrome.google.com/webstore/detail/link-hints/kjjgifdfplpegljdfnpmbjmkngdilmkd][here]]. For Firefox-based web browsers, use
[[https://addons.mozilla.org/en-US/firefox/addon/linkhints/?utm_source=addons.mozilla.org&utm_medium=referral&utm_content=search][this]] link instead.

** Bookmarks in web browsers

Emacs's built-in bookmarking functions currently work out-of-the-box for users
of Chromium that have the [[https://chrome.google.com/webstore/detail/add-url-to-page-title/ghpeimfjbonkimelnkbgekmcboomkgmi/related?hl=en-GB][Add Page URL to Title]] extension installed.

** Setting up multiple monitors

Currently this module does not provide any simplified setup for multi-head
configurations. Please refer to
https://github.com/ch11ng/exwm/wiki#randr-multi-screen for how to do this.

** Using i3-style keybindings

If you would like i3-style keybindings, I recommend adding the following
paragraph to your private configuration:
#+begin_src elisp
;; i3-like keybindings for EXWM
(windmove-mode +1)
(when (modulep! :cae exwm)
  (map! "s-j" #'windmove-left
        "s-k" #'windmove-down
        "s-l" #'windmove-up
        "s-;" #'windmove-right
        "s-J" #'windmove-swap-states-left
        "s-K" #'windmove-swap-states-down
        "s-L" #'windmove-swap-states-up
        "s-Q" #'delete-window
        "s-:" #'windmove-swap-states-right
        "s-v" #'split-window-right
        "s-h" #'split-window-below
        (:when (modulep! :ui workspaces)
         "s-1" #'+workspace/switch-to-0
         "s-2" #'+workspace/switch-to-1
         "s-3" #'+workspace/switch-to-2
         "s-4" #'+workspace/switch-to-3
         "s-5" #'+workspace/switch-to-4
         "s-6" #'+workspace/switch-to-5
         "s-7" #'+workspace/switch-to-6
         "s-8" #'+workspace/switch-to-7
         "s-9" #'+workspace/switch-to-8
         "s-0" #'+workspace/switch-to-final
         (:when (modulep! :term vterm)
          "s-<return>" (defun +run-or-raise-vterm ()
                         (interactive)
                         (+workspace-switch "Vterm" t)
                         (let ((display-buffer-alist))
                           (vterm most-positive-fixnum)))))
        "s-'" #'exwm-edit--compose)
  (after! exwm
    (dolist (key '(?\s-h ?\s-j ?\s-k ?\s-l ?\s-H ?\s-J ?\s-K ?\s-L ?\s-0 ?\s-1
                         ?\s-2 ?\s-3 ?\s-4 ?\s-5 ?\s-6 ?\s-7 ?\s-8 ?\s-9 ?\s-d
                         ?\s-\; ?\s-v ?\s-' ?\C-\[ ?\s-Q))
      (cl-pushnew key exwm-input-prefix-keys))))
#+end_src

* Troubleshooting

** How do I send ~escape~ or ~C-c~ to applications?

| Keybind | Description                                            |
|---------+--------------------------------------------------------|
| =C-c C-i= | Send the escape key (only bound when Evil is enabled). |
| =C-c C-c= | Send the C-c key.                                      |
| =C-c C-q= | Send the next key to the application.                  |

** When I mouse-click while in Evil's normal state I get an error.

I (the author) do not know how to suppress or remove the,
"evil-mouse-drag-region must be bound to an event with parameters" error. I
recommend ignoring this error though as your clicks still register.

This bug is a result of a workaround I copied from this GitHub issue:
https://github.com/walseb/exwm-firefox-evil/issues/1

** The commands for opening nested Emacs sessions do not work.

There is an incompatibility between =exwm-xim= and nested Emacs sessions. To
resolve this incompatibility, you must either:
1. Not enable =exwm-xim= or
2. compile Emacs =--without-xim=.
3. You can also disable =xim= through =Xresources=, though I have not tested this approach.

** My application does not display any GUI.

Try disabling =exwm-xim=. The other personally encountered this issue with running
nested Emacs sessions as well as when runnning Wine.

* Future directions
:PROPERTIES:
:CREATED_TIME: [2022-02-25 Fri 21:17]
:END:

- [ ] Document workarounds for packages utilizing child frames.
- [ ] Add Evil to the nested vanilla Emacs configuration file.
